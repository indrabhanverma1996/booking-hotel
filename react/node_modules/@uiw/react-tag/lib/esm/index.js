import _extends from "@babel/runtime/helpers/esm/extends";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { useMemo } from 'react';
import "./style/index.css";
export default (function () {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _props$prefixCls = props.prefixCls,
      prefixCls = _props$prefixCls === void 0 ? 'w-tag' : _props$prefixCls,
      className = props.className,
      style = props.style,
      _props$title = props.title,
      title = _props$title === void 0 ? '' : _props$title,
      children = props.children,
      _props$visible = props.visible,
      visible = _props$visible === void 0 ? true : _props$visible,
      _props$color = props.color,
      color = _props$color === void 0 ? '#6E6E6E' : _props$color,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      _props$bordered = props.bordered,
      bordered = _props$bordered === void 0 ? true : _props$bordered,
      closable = props.closable,
      _props$light = props.light,
      light = _props$light === void 0 ? false : _props$light,
      onClose = props.onClose,
      other = _objectWithoutProperties(props, ["prefixCls", "className", "style", "title", "children", "visible", "color", "disabled", "bordered", "closable", "light", "onClose"]);

  var cls = [prefixCls, className, light ? "".concat(prefixCls, "-light") : null, disabled ? 'disabled' : null].filter(Boolean).join(' ').trim();

  var styl = _objectSpread({}, style);

  if (!light) {
    styl.color = '#fff';
    styl.backgroundColor = color;
  } else {
    styl.color = color;
    styl.borderColor = color;

    if (bordered && light) {
      styl.boxShadow = "inset 0 0 0 1px ".concat(color);
    }
  }

  if (!visible) {
    return null;
  }

  var closeBtn = useMemo(function () {
    return closable ? /*#__PURE__*/React.createElement("svg", {
      onClick: onClose,
      className: "".concat(prefixCls, "-close"),
      width: "16",
      height: "16",
      viewBox: "0 0 16 16"
    }, /*#__PURE__*/React.createElement("path", {
      d: "M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z"
    })) : null;
  }, [closable]);
  return /*#__PURE__*/React.createElement("span", _extends({
    className: cls,
    style: styl
  }, other), title || children, closeBtn);
}); 
//# sourceMappingURL=index.js.map