{"version":3,"sources":["../../src/index.tsx"],"names":["props","prefixCls","className","style","title","children","visible","color","disabled","bordered","closable","light","onClose","other","cls","filter","Boolean","join","trim","styl","backgroundColor","borderColor","boxShadow","closeBtn"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;eAee,oBAA0B;AAAA,MAAzBA,KAAyB,uEAAP,EAAO;AAAA,yBAenCA,KAfmC,CAErCC,SAFqC;AAAA,MAErCA,SAFqC,iCAEzB,OAFyB;AAAA,MAGrCC,SAHqC,GAenCF,KAfmC,CAGrCE,SAHqC;AAAA,MAIrCC,KAJqC,GAenCH,KAfmC,CAIrCG,KAJqC;AAAA,qBAenCH,KAfmC,CAKrCI,KALqC;AAAA,MAKrCA,KALqC,6BAK7B,EAL6B;AAAA,MAMrCC,QANqC,GAenCL,KAfmC,CAMrCK,QANqC;AAAA,uBAenCL,KAfmC,CAOrCM,OAPqC;AAAA,MAOrCA,OAPqC,+BAO3B,IAP2B;AAAA,qBAenCN,KAfmC,CAQrCO,KARqC;AAAA,MAQrCA,KARqC,6BAQ7B,SAR6B;AAAA,wBAenCP,KAfmC,CASrCQ,QATqC;AAAA,MASrCA,QATqC,gCAS1B,KAT0B;AAAA,wBAenCR,KAfmC,CAUrCS,QAVqC;AAAA,MAUrCA,QAVqC,gCAU1B,IAV0B;AAAA,MAWrCC,QAXqC,GAenCV,KAfmC,CAWrCU,QAXqC;AAAA,qBAenCV,KAfmC,CAYrCW,KAZqC;AAAA,MAYrCA,KAZqC,6BAY7B,KAZ6B;AAAA,MAarCC,OAbqC,GAenCZ,KAfmC,CAarCY,OAbqC;AAAA,MAclCC,KAdkC,0CAenCb,KAfmC;AAgBvC,MAAMc,GAAG,GAAG,CACVb,SADU,EAEVC,SAFU,EAGVS,KAAK,aAAMV,SAAN,cAA0B,IAHrB,EAIVO,QAAQ,GAAG,UAAH,GAAgB,IAJd,EAMTO,MANS,CAMFC,OANE,EAOTC,IAPS,CAOJ,GAPI,EAQTC,IARS,EAAZ;AASA,MAAMC,IAAyB,mCAAQhB,KAAR,CAA/B;;AACA,MAAI,CAACQ,KAAL,EAAY;AACVQ,IAAAA,IAAI,CAACZ,KAAL,GAAa,MAAb;AACAY,IAAAA,IAAI,CAACC,eAAL,GAAuBb,KAAvB;AACD,GAHD,MAGO;AACLY,IAAAA,IAAI,CAACZ,KAAL,GAAaA,KAAb;AACAY,IAAAA,IAAI,CAACE,WAAL,GAAmBd,KAAnB;;AACA,QAAIE,QAAQ,IAAIE,KAAhB,EAAuB;AACrBQ,MAAAA,IAAI,CAACG,SAAL,6BAAoCf,KAApC;AACD;AACF;;AACD,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,MAAMiB,QAAQ,GAAG,oBACf;AAAA,WACEb,QAAQ,gBACN;AACE,MAAA,OAAO,EAAEE,OADX;AAEE,MAAA,SAAS,YAAKX,SAAL,WAFX;AAGE,MAAA,KAAK,EAAC,IAHR;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,OAAO,EAAC;AALV,oBAOE;AAAM,MAAA,CAAC,EAAC;AAAR,MAPF,CADM,GAUJ,IAXN;AAAA,GADe,EAaf,CAACS,QAAD,CAbe,CAAjB;AAeA,sBACE;AAAM,IAAA,SAAS,EAAEI,GAAjB;AAAsB,IAAA,KAAK,EAAEK;AAA7B,KAAuCN,KAAvC,GACGT,KAAK,IAAIC,QADZ,EAEGkB,QAFH,CADF;AAMD,C","sourcesContent":["import React, { useMemo } from 'react';\nimport { IProps, HTMLSpanProps } from '@uiw/utils';\nimport './style/index.less';\n\nexport interface TagProps extends IProps, Omit<HTMLSpanProps, 'title'> {\n  color?: string;\n  disabled?: boolean;\n  visible?: boolean;\n  bordered?: boolean;\n  light?: boolean;\n  closable?: boolean;\n  title?: React.ReactNode;\n  onClose?: (e: React.MouseEvent<SVGSVGElement, MouseEvent>) => void;\n}\n\nexport default (props: TagProps = {}) => {\n  const {\n    prefixCls = 'w-tag',\n    className,\n    style,\n    title = '',\n    children,\n    visible = true,\n    color = '#6E6E6E',\n    disabled = false,\n    bordered = true,\n    closable,\n    light = false,\n    onClose,\n    ...other\n  } = props;\n  const cls = [\n    prefixCls,\n    className,\n    light ? `${prefixCls}-light` : null,\n    disabled ? 'disabled' : null,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n  const styl: React.CSSProperties = { ...style };\n  if (!light) {\n    styl.color = '#fff';\n    styl.backgroundColor = color;\n  } else {\n    styl.color = color;\n    styl.borderColor = color;\n    if (bordered && light) {\n      styl.boxShadow = `inset 0 0 0 1px ${color}`;\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  const closeBtn = useMemo(\n    () =>\n      closable ? (\n        <svg\n          onClick={onClose}\n          className={`${prefixCls}-close`}\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z\" />\n        </svg>\n      ) : null,\n    [closable],\n  );\n  return (\n    <span className={cls} style={styl} {...other}>\n      {title || children}\n      {closeBtn}\n    </span>\n  );\n};\n"]}