{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USER_REVIEWS, ADD_REVIEW, UPDATE_REVIEW, DELETE_REVIEW, HAS_BOOKED, GET_HOTEL_REVIEWS, GET_ALL_REVIEWS } from \"../actionTypes\";\nimport { setLoading } from \"./global\";\nconst url = process.env.REACT_APP_BASE_URL; //-----------------------------------------\n\nexport const getHotelReviews = (dispatch, hotel_id, user_id, page) => {\n  setLoading(dispatch, true);\n  axios(`${url}/api/reviews/hotel/${hotel_id}/${user_id ? user_id : 1}?page=${page}`).then(response => {\n    dispatch({\n      type: GET_HOTEL_REVIEWS,\n      payload: response.data.data\n    });\n    dispatch({\n      type: HAS_BOOKED,\n      payload: response.data.data.count\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const getAllReviews = (dispatch, token, page = 1) => {\n  setLoading(dispatch, true);\n  axios.get(`${url}/api/reviews?page=${page}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_ALL_REVIEWS,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const getUserReviews = (dispatch, token, id, page = 1) => {\n  setLoading(dispatch, true);\n  axios.get(`${url}/api/reviews/user/${id}?page=${page}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_USER_REVIEWS,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const addReview = (dispatch, token, review) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/api/reviews`, {\n    content: review.content,\n    rating: review.rating,\n    user_id: review.user_id,\n    hotel_id: review.hotel_id\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: ADD_REVIEW,\n      payload: response.data.data\n    });\n    getHotelReviews(dispatch, review.hotel_id, review.user_id);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const updateReview = (dispatch, token, review) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/api/reviews/${review.id}`, {\n    content: review.content,\n    rating: review.rating,\n    user_id: review.user_id,\n    hotel_id: review.hotel_id\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_REVIEW,\n      payload: response.data.data\n    });\n    getAllReviews(dispatch, token);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const deleteReview = (dispatch, token, review) => {\n  setLoading(dispatch, true);\n  axios.delete(`${url}/api/reviews/${review.id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: DELETE_REVIEW,\n      payload: response.data.data\n    });\n    getAllReviews(dispatch, token);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const updateUserReview = (dispatch, token, review) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/api/reviews/${review.id}`, {\n    content: review.content,\n    rating: review.rating,\n    user_id: review.user_id,\n    hotel_id: review.hotel_id\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_REVIEW,\n      payload: response.data.data\n    });\n    getUserReviews(dispatch, token, review.user_id);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const deleteUserReview = (dispatch, token, review) => {\n  setLoading(dispatch, true);\n  axios.delete(`${url}/api/reviews/${review.id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: DELETE_REVIEW,\n      payload: response.data.data\n    });\n    getUserReviews(dispatch, token, review.user_id);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/actions/reviews.js"],"names":["axios","GET_USER_REVIEWS","ADD_REVIEW","UPDATE_REVIEW","DELETE_REVIEW","HAS_BOOKED","GET_HOTEL_REVIEWS","GET_ALL_REVIEWS","setLoading","url","process","env","REACT_APP_BASE_URL","getHotelReviews","dispatch","hotel_id","user_id","page","then","response","type","payload","data","count","catch","error","getAllReviews","token","get","headers","Authorization","getUserReviews","id","addReview","review","post","content","rating","updateReview","put","deleteReview","delete","updateUserReview","deleteUserReview"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    GET_USER_REVIEWS,\r\n    ADD_REVIEW,\r\n    UPDATE_REVIEW,\r\n    DELETE_REVIEW,\r\n    HAS_BOOKED,\r\n    GET_HOTEL_REVIEWS,\r\n    GET_ALL_REVIEWS\r\n} from \"../actionTypes\";\r\nimport { setLoading } from \"./global\";\r\n\r\nconst url = process.env.REACT_APP_BASE_URL;\r\n\r\n//-----------------------------------------\r\nexport const getHotelReviews = (dispatch, hotel_id, user_id, page) => {\r\n    setLoading(dispatch, true);\r\n    axios(\r\n        `${url}/api/reviews/hotel/${hotel_id}/${\r\n            user_id ? user_id : 1\r\n        }?page=${page}`\r\n    )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_HOTEL_REVIEWS,\r\n                payload: response.data.data\r\n            });\r\n            dispatch({\r\n                type: HAS_BOOKED,\r\n                payload: response.data.data.count\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\n\r\nexport const getAllReviews = (dispatch, token, page = 1) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .get(`${url}/api/reviews?page=${page}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_ALL_REVIEWS,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const getUserReviews = (dispatch, token, id, page = 1) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .get(`${url}/api/reviews/user/${id}?page=${page}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_USER_REVIEWS,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\nexport const addReview = (dispatch, token, review) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .post(\r\n            `${url}/api/reviews`,\r\n            {\r\n                content: review.content,\r\n                rating: review.rating,\r\n                user_id: review.user_id,\r\n                hotel_id: review.hotel_id\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: ADD_REVIEW,\r\n                payload: response.data.data\r\n            });\r\n            getHotelReviews(dispatch, review.hotel_id, review.user_id);\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n//-----------------------------------------\r\nexport const updateReview = (dispatch, token, review) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .put(\r\n            `${url}/api/reviews/${review.id}`,\r\n            {\r\n                content: review.content,\r\n                rating: review.rating,\r\n                user_id: review.user_id,\r\n                hotel_id: review.hotel_id\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_REVIEW,\r\n                payload: response.data.data\r\n            });\r\n            getAllReviews(dispatch, token);\r\n\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n//-----------------------------------------\r\nexport const deleteReview = (dispatch, token, review) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .delete(`${url}/api/reviews/${review.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: DELETE_REVIEW,\r\n                payload: response.data.data\r\n            });\r\n            getAllReviews(dispatch, token);\r\n\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\nexport const updateUserReview = (dispatch, token, review) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .put(\r\n            `${url}/api/reviews/${review.id}`,\r\n            {\r\n                content: review.content,\r\n                rating: review.rating,\r\n                user_id: review.user_id,\r\n                hotel_id: review.hotel_id\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_REVIEW,\r\n                payload: response.data.data\r\n            });\r\n            getUserReviews(dispatch, token, review.user_id);\r\n\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n//-----------------------------------------\r\nexport const deleteUserReview = (dispatch, token, review) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .delete(`${url}/api/reviews/${review.id}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: DELETE_REVIEW,\r\n                payload: response.data.data\r\n            });\r\n            getUserReviews(dispatch, token, review.user_id);\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}