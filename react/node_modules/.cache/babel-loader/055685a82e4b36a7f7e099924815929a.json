{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USER, UPDATE_USER_INFO, UPDATE_USER_EMAIL, UPDATE_USER_PASSWORD } from \"../actionTypes\";\nimport { setLoading } from \"./global\";\nconst url = process.env.REACT_APP_BASE_URL; //-----------------------------------------\n\nexport const getUser = (dispatch, token, id) => {\n  axios(`${url}/api/users/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_USER,\n      payload: response.data.data\n    });\n  }).catch(error => {});\n}; //-----------------------------------------\n\nexport const updateUserInfo = (dispatch, token, formData) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/api/users/${formData.get(\"id\")}/update-personal-info`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_USER_INFO,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n  });\n}; //-----------------------------------------\n\nexport const updateUserEmail = (dispatch, token, id, {\n  email,\n  newEmail,\n  confirmNewEmail\n}) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/api/users/${id}/update-email`, {\n    email,\n    newEmail,\n    confirmNewEmail\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_USER_EMAIL,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n  });\n}; //-----------------------------------------\n\nexport const updateUserPassword = (dispatch, token, id, {\n  password,\n  newPassword,\n  confirmNewPassword\n}) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/api/users/${id}/update-password`, {\n    password,\n    newPassword,\n    confirmNewPassword\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_USER_PASSWORD,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/project/react/src/redux/actions/users.js"],"names":["axios","GET_USER","UPDATE_USER_INFO","UPDATE_USER_EMAIL","UPDATE_USER_PASSWORD","setLoading","url","process","env","REACT_APP_BASE_URL","getUser","dispatch","token","id","headers","Authorization","then","response","type","payload","data","catch","error","updateUserInfo","formData","post","get","updateUserEmail","email","newEmail","confirmNewEmail","put","updateUserPassword","password","newPassword","confirmNewPassword"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    GET_USER,\r\n    UPDATE_USER_INFO,\r\n    UPDATE_USER_EMAIL,\r\n    UPDATE_USER_PASSWORD\r\n} from \"../actionTypes\";\r\nimport { setLoading } from \"./global\";\r\n\r\nconst url = process.env.REACT_APP_BASE_URL;\r\n\r\n//-----------------------------------------\r\n\r\nexport const getUser = (dispatch, token, id) => {\r\n    axios(`${url}/api/users/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_USER,\r\n                payload: response.data.data\r\n            });\r\n        })\r\n        .catch((error) => {});\r\n};\r\n//-----------------------------------------\r\nexport const updateUserInfo = (dispatch, token, formData) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .post(\r\n            `${url}/api/users/${formData.get(\"id\")}/update-personal-info`,\r\n            formData,\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_USER_INFO,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, true);\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const updateUserEmail = (\r\n    dispatch,\r\n    token,\r\n    id,\r\n    { email, newEmail, confirmNewEmail }\r\n) => {\r\n    setLoading(dispatch, true);\r\n\r\n    axios\r\n        .put(\r\n            `${url}/api/users/${id}/update-email`,\r\n            {\r\n                email,\r\n                newEmail,\r\n                confirmNewEmail\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_USER_EMAIL,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, true);\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const updateUserPassword = (\r\n    dispatch,\r\n    token,\r\n    id,\r\n    { password, newPassword, confirmNewPassword }\r\n) => {\r\n    setLoading(dispatch, true);\r\n\r\n    axios\r\n        .put(\r\n            `${url}/api/users/${id}/update-password`,\r\n            {\r\n                password,\r\n                newPassword,\r\n                confirmNewPassword\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_USER_PASSWORD,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, true);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}