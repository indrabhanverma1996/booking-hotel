{"ast":null,"code":"import { GET_ROOM, ADD_ROOM, DELETE_ROOM, UPDATE_ROOM, GET_ALL_ROOMS } from \"../actionTypes\";\nimport { setLoading } from \"./global\";\nimport axios from \"axios\";\nconst url = process.env.REACT_APP_BASE_URL; //-----------------------------------------\n\nexport const getRoom = (dispatch, id) => {\n  axios(`${url}/api/rooms/${id}`).then(response => {\n    dispatch({\n      type: GET_ROOM,\n      payload: response.data.data\n    });\n  }).catch(error => {});\n}; //-----------------------------------------\n\nexport const getAllRooms = (dispatch, token, page = 1) => {\n  setLoading(dispatch, true);\n  axios(`${url}/api/rooms?page=${page}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_ALL_ROOMS,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport const addRoom = (dispatch, formData, token) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/api/rooms`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: ADD_ROOM,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n}; //-----------------------------------------\n\nexport const updateRoom = (dispatch, formData, token) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/api/rooms/${formData.get(\"id\")}`, formData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_ROOM,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n}; //-----------------------------------------\n\nexport const deleteRoom = (dispatch, id, token) => {\n  setLoading(dispatch, true);\n  axios.delete(`${url}/api/rooms/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: DELETE_ROOM,\n      payload: response.data.data\n    });\n    getAllRooms(dispatch, token);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/actions/rooms.js"],"names":["GET_ROOM","ADD_ROOM","DELETE_ROOM","UPDATE_ROOM","GET_ALL_ROOMS","setLoading","axios","url","process","env","REACT_APP_BASE_URL","getRoom","dispatch","id","then","response","type","payload","data","catch","error","getAllRooms","token","page","headers","Authorization","addRoom","formData","post","status","window","location","replace","updateRoom","get","deleteRoom","delete"],"mappings":"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","sourcesContent":["import {\r\n    GET_ROOM,\r\n    ADD_ROOM,\r\n    DELETE_ROOM,\r\n    UPDATE_ROOM,\r\n    GET_ALL_ROOMS\r\n} from \"../actionTypes\";\r\nimport { setLoading } from \"./global\";\r\nimport axios from \"axios\";\r\n\r\nconst url = process.env.REACT_APP_BASE_URL;\r\n\r\n//-----------------------------------------\r\n\r\nexport const getRoom = (dispatch, id) => {\r\n    axios(`${url}/api/rooms/${id}`)\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_ROOM,\r\n                payload: response.data.data\r\n            });\r\n        })\r\n        .catch((error) => {});\r\n};\r\n\r\n//-----------------------------------------\r\nexport const getAllRooms = (dispatch, token, page = 1) => {\r\n    setLoading(dispatch, true);\r\n    axios(`${url}/api/rooms?page=${page}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_ALL_ROOMS,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\nexport const addRoom = (dispatch, formData, token) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .post(`${url}/api/rooms`, formData, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: ADD_ROOM,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\n\r\nexport const updateRoom = (dispatch, formData, token) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .post(`${url}/api/rooms/${formData.get(\"id\")}`, formData, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: UPDATE_ROOM,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n\r\n//-----------------------------------------\r\n\r\nexport const deleteRoom = (dispatch, id, token) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .delete(`${url}/api/rooms/${id}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: DELETE_ROOM,\r\n                payload: response.data.data\r\n            });\r\n            getAllRooms(dispatch, token);\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}