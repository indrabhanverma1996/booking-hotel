{"ast":null,"code":"import { SEARCH, GET_SEARCH_DATA, SET_LOADING } from \"../actionTypes\";\nconst initialState = {\n  hotels: [],\n  cities: [],\n  features: [],\n  success: null,\n  errors: null,\n  loading: false,\n  pagination: {\n    current_page: null,\n    first_page_url: null,\n    from: null,\n    last_page: null,\n    last_page_url: null,\n    next_page_url: null,\n    path: null,\n    per_page: null,\n    prev_page_url: null\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SEARCH:\n      {\n        return { ...state,\n          hotels: action.payload.hotels.data,\n          success: action.payload.success ? true : false,\n          errors: action.payload.success ? null : action.payload.errors,\n          pagination: {\n            current_page: action.payload.hotels.current_page,\n            first_page_url: action.payload.hotels.first_page_url,\n            from: action.payload.hotels.from,\n            last_page: action.payload.hotels.last_page,\n            last_page_url: action.payload.hotels.last_page_url,\n            next_page_url: action.payload.hotels.next_page_url,\n            path: action.payload.hotels.path,\n            per_page: action.payload.hotels.per_page,\n            prev_page_url: action.payload.hotels.prev_page_url\n          }\n        };\n      }\n\n    case GET_SEARCH_DATA:\n      {\n        return { ...state,\n          cities: action.payload.cities,\n          features: action.payload.features\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/reducers/search.js"],"names":["SEARCH","GET_SEARCH_DATA","SET_LOADING","initialState","hotels","cities","features","success","errors","loading","pagination","current_page","first_page_url","from","last_page","last_page_url","next_page_url","path","per_page","prev_page_url","state","action","type","payload","data"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,eAAjB,EAAkCC,WAAlC,QAAqD,gBAArD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,OAAO,EAAE,IAJQ;AAKjBC,EAAAA,MAAM,EAAE,IALS;AAMjBC,EAAAA,OAAO,EAAE,KANQ;AAOjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE,IADN;AAERC,IAAAA,cAAc,EAAE,IAFR;AAGRC,IAAAA,IAAI,EAAE,IAHE;AAIRC,IAAAA,SAAS,EAAE,IAJH;AAKRC,IAAAA,aAAa,EAAE,IALP;AAMRC,IAAAA,aAAa,EAAE,IANP;AAORC,IAAAA,IAAI,EAAE,IAPE;AAQRC,IAAAA,QAAQ,EAAE,IARF;AASRC,IAAAA,aAAa,EAAE;AATP;AAPK,CAArB;AAoBA,eAAe,UAAUC,KAAK,GAAGjB,YAAlB,EAAgCkB,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,MAAL;AAAa;AACT,eAAO,EACH,GAAGoB,KADA;AAEHhB,UAAAA,MAAM,EAAEiB,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBoB,IAF3B;AAGHjB,UAAAA,OAAO,EAAEc,MAAM,CAACE,OAAP,CAAehB,OAAf,GAAyB,IAAzB,GAAgC,KAHtC;AAIHC,UAAAA,MAAM,EAAEa,MAAM,CAACE,OAAP,CAAehB,OAAf,GAAyB,IAAzB,GAAgCc,MAAM,CAACE,OAAP,CAAef,MAJpD;AAKHE,UAAAA,UAAU,EAAE;AACRC,YAAAA,YAAY,EAAEU,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBO,YAD5B;AAERC,YAAAA,cAAc,EAAES,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBQ,cAF9B;AAGRC,YAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBS,IAHpB;AAIRC,YAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBU,SAJzB;AAKRC,YAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBW,aAL7B;AAMRC,YAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBY,aAN7B;AAORC,YAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBa,IAPpB;AAQRC,YAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBc,QARxB;AASRC,YAAAA,aAAa,EAAEE,MAAM,CAACE,OAAP,CAAenB,MAAf,CAAsBe;AAT7B;AALT,SAAP;AAiBH;;AACD,SAAKlB,eAAL;AAAsB;AAClB,eAAO,EACH,GAAGmB,KADA;AAEHf,UAAAA,MAAM,EAAEgB,MAAM,CAACE,OAAP,CAAelB,MAFpB;AAGHC,UAAAA,QAAQ,EAAEe,MAAM,CAACE,OAAP,CAAejB;AAHtB,SAAP;AAKH;;AACD,SAAKJ,WAAL;AAAkB;AACd,eAAO,EACH,GAAGkB,KADA;AAEHX,UAAAA,OAAO,EAAEY,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AAlCR;AAoCH","sourcesContent":["import { SEARCH, GET_SEARCH_DATA, SET_LOADING } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    hotels: [],\r\n    cities: [],\r\n    features: [],\r\n    success: null,\r\n    errors: null,\r\n    loading: false,\r\n    pagination: {\r\n        current_page: null,\r\n        first_page_url: null,\r\n        from: null,\r\n        last_page: null,\r\n        last_page_url: null,\r\n        next_page_url: null,\r\n        path: null,\r\n        per_page: null,\r\n        prev_page_url: null\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH: {\r\n            return {\r\n                ...state,\r\n                hotels: action.payload.hotels.data,\r\n                success: action.payload.success ? true : false,\r\n                errors: action.payload.success ? null : action.payload.errors,\r\n                pagination: {\r\n                    current_page: action.payload.hotels.current_page,\r\n                    first_page_url: action.payload.hotels.first_page_url,\r\n                    from: action.payload.hotels.from,\r\n                    last_page: action.payload.hotels.last_page,\r\n                    last_page_url: action.payload.hotels.last_page_url,\r\n                    next_page_url: action.payload.hotels.next_page_url,\r\n                    path: action.payload.hotels.path,\r\n                    per_page: action.payload.hotels.per_page,\r\n                    prev_page_url: action.payload.hotels.prev_page_url\r\n                }\r\n            };\r\n        }\r\n        case GET_SEARCH_DATA: {\r\n            return {\r\n                ...state,\r\n                cities: action.payload.cities,\r\n                features: action.payload.features\r\n            };\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}