{"ast":null,"code":"import { SIGN_UP, LOG_IN, CHECK_AUTH, SET_LOADING } from \"../actionTypes\";\nimport SecureLS from \"secure-ls\";\nlet ls = new SecureLS({\n  encodingType: \"aes\",\n  isCompression: false\n});\n\nlet _token;\n\nlet _user_id;\n\nlet _is_admin;\n\ntry {\n  _token = ls.get(\"token\");\n  _user_id = ls.get(\"user_id\");\n  _is_admin = ls.get(\"is_admin\");\n} catch (error) {}\n\nconst initialState = {\n  isAuthenticated: _token !== null && _token !== \"null\" && _token !== \"\" ? true : false,\n  token: _token || null,\n  user_id: _user_id || null,\n  is_admin: _is_admin || false,\n  loading: false,\n  success: null,\n  errors: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SIGN_UP:\n      {\n        return { ...state,\n          success: action.payload.success ? true : false,\n          isAuthenticated: action.payload.success ? true : false,\n          token: action.payload.success ? action.payload.token : null,\n          user_id: action.payload.success ? action.payload.user_id : null,\n          is_admin: action.payload.success ? action.payload.is_admin : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case LOG_IN:\n      {\n        return { ...state,\n          success: action.payload.success ? true : false,\n          isAuthenticated: action.payload.success ? true : false,\n          token: action.payload.success ? action.payload.token : null,\n          user_id: action.payload.success ? action.payload.user_id : null,\n          is_admin: action.payload.success ? action.payload.is_admin : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case CHECK_AUTH:\n      {\n        return { ...state,\n          isAuthenticated: action.payload.isAuthenticated,\n          token: action.payload.token,\n          user_id: action.payload.user_id,\n          is_admin: action.payload.is_admin\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/project/react/src/redux/reducers/auth.js"],"names":["SIGN_UP","LOG_IN","CHECK_AUTH","SET_LOADING","SecureLS","ls","encodingType","isCompression","_token","_user_id","_is_admin","get","error","initialState","isAuthenticated","token","user_id","is_admin","loading","success","errors","state","action","type","payload"],"mappings":"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","sourcesContent":["import { SIGN_UP, LOG_IN, CHECK_AUTH, SET_LOADING } from \"../actionTypes\";\r\nimport SecureLS from \"secure-ls\";\r\n\r\nlet ls = new SecureLS({ encodingType: \"aes\", isCompression: false });\r\nlet _token;\r\nlet _user_id;\r\nlet _is_admin;\r\ntry {\r\n    _token = ls.get(\"token\");\r\n    _user_id = ls.get(\"user_id\");\r\n    _is_admin = ls.get(\"is_admin\");\r\n} catch (error) {}\r\nconst initialState = {\r\n    isAuthenticated:\r\n        _token !== null && _token !== \"null\" && _token !== \"\" ? true : false,\r\n    token: _token || null,\r\n    user_id: _user_id || null,\r\n    is_admin: _is_admin || false,\r\n    loading: false,\r\n    success: null,\r\n    errors: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SIGN_UP: {\r\n            return {\r\n                ...state,\r\n                success: action.payload.success ? true : false,\r\n                isAuthenticated: action.payload.success ? true : false,\r\n                token: action.payload.success ? action.payload.token : null,\r\n                user_id: action.payload.success ? action.payload.user_id : null,\r\n                is_admin: action.payload.success\r\n                    ? action.payload.is_admin\r\n                    : false,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case LOG_IN: {\r\n            return {\r\n                ...state,\r\n                success: action.payload.success ? true : false,\r\n                isAuthenticated: action.payload.success ? true : false,\r\n                token: action.payload.success ? action.payload.token : null,\r\n                user_id: action.payload.success ? action.payload.user_id : null,\r\n                is_admin: action.payload.success\r\n                    ? action.payload.is_admin\r\n                    : false,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case CHECK_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: action.payload.isAuthenticated,\r\n                token: action.payload.token,\r\n                user_id: action.payload.user_id,\r\n                is_admin: action.payload.is_admin\r\n            };\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}