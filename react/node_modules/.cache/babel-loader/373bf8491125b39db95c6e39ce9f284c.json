{"ast":null,"code":"import { GET_USER_BOOKINGS, GET_ALL_BOOKINGS, ADD_BOOKING, SET_LOADING, SET_SUCCESS } from \"../actionTypes\";\nconst initialState = {\n  allBookings: [],\n  loading: false,\n  booking: null,\n  success: null,\n  errors: null,\n  pagination: {\n    current_page: null,\n    first_page_url: null,\n    from: null,\n    last_page: null,\n    last_page_url: null,\n    next_page_url: null,\n    path: null,\n    per_page: null,\n    prev_page_url: null\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_BOOKINGS:\n      {\n        return { ...state,\n          allBookings: action.payload.bookings.data,\n          pagination: {\n            current_page: action.payload.bookings.current_page,\n            first_page_url: action.payload.bookings.first_page_url,\n            from: action.payload.bookings.from,\n            last_page: action.payload.bookings.last_page,\n            last_page_url: action.payload.bookings.last_page_url,\n            next_page_url: action.payload.bookings.next_page_url,\n            path: action.payload.bookings.path,\n            per_page: action.payload.bookings.per_page,\n            prev_page_url: action.payload.bookings.prev_page_url\n          }\n        };\n      }\n\n    case GET_ALL_BOOKINGS:\n      {\n        return { ...state,\n          allBookings: action.payload.bookings.data,\n          pagination: {\n            current_page: action.payload.bookings.current_page,\n            first_page_url: action.payload.bookings.first_page_url,\n            from: action.payload.bookings.from,\n            last_page: action.payload.bookings.last_page,\n            last_page_url: action.payload.bookings.last_page_url,\n            next_page_url: action.payload.bookings.next_page_url,\n            path: action.payload.bookings.path,\n            per_page: action.payload.bookings.per_page,\n            prev_page_url: action.payload.bookings.prev_page_url\n          }\n        };\n      }\n\n    case ADD_BOOKING:\n      {\n        return { ...state,\n          success: action.payload.success ? true : false,\n          booking: action.payload.booking,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    case SET_SUCCESS:\n      {\n        return { ...state,\n          success: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/reducers/bookings.js"],"names":["GET_USER_BOOKINGS","GET_ALL_BOOKINGS","ADD_BOOKING","SET_LOADING","SET_SUCCESS","initialState","allBookings","loading","booking","success","errors","pagination","current_page","first_page_url","from","last_page","last_page_url","next_page_url","path","per_page","prev_page_url","state","action","type","payload","bookings","data"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,gBAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,WALJ,QAMO,gBANP;AAQA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,OAAO,EAAE,IAJQ;AAKjBC,EAAAA,MAAM,EAAE,IALS;AAMjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE,IADN;AAERC,IAAAA,cAAc,EAAE,IAFR;AAGRC,IAAAA,IAAI,EAAE,IAHE;AAIRC,IAAAA,SAAS,EAAE,IAJH;AAKRC,IAAAA,aAAa,EAAE,IALP;AAMRC,IAAAA,aAAa,EAAE,IANP;AAORC,IAAAA,IAAI,EAAE,IAPE;AAQRC,IAAAA,QAAQ,EAAE,IARF;AASRC,IAAAA,aAAa,EAAE;AATP;AANK,CAArB;AAmBA,eAAe,UAAUC,KAAK,GAAGhB,YAAlB,EAAgCiB,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKvB,iBAAL;AAAwB;AACpB,eAAO,EACH,GAAGqB,KADA;AAEHf,UAAAA,WAAW,EAAEgB,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,IAFlC;AAGHf,UAAAA,UAAU,EAAE;AACRC,YAAAA,YAAY,EAAEU,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBb,YAD9B;AAERC,YAAAA,cAAc,EAAES,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBZ,cAFhC;AAGRC,YAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBX,IAHtB;AAIRC,YAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBV,SAJ3B;AAKRC,YAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBT,aAL/B;AAMRC,YAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBR,aAN/B;AAORC,YAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBP,IAPtB;AAQRC,YAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBN,QAR1B;AASRC,YAAAA,aAAa,EAAEE,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBL;AAT/B;AAHT,SAAP;AAeH;;AACD,SAAKnB,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGoB,KADA;AAEHf,UAAAA,WAAW,EAAEgB,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,IAFlC;AAGHf,UAAAA,UAAU,EAAE;AACRC,YAAAA,YAAY,EAAEU,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBb,YAD9B;AAERC,YAAAA,cAAc,EAAES,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBZ,cAFhC;AAGRC,YAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBX,IAHtB;AAIRC,YAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBV,SAJ3B;AAKRC,YAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBT,aAL/B;AAMRC,YAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBR,aAN/B;AAORC,YAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBP,IAPtB;AAQRC,YAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBN,QAR1B;AASRC,YAAAA,aAAa,EAAEE,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBL;AAT/B;AAHT,SAAP;AAeH;;AACD,SAAKlB,WAAL;AAAkB;AACd,eAAO,EACH,GAAGmB,KADA;AAEHZ,UAAAA,OAAO,EAAEa,MAAM,CAACE,OAAP,CAAef,OAAf,GAAyB,IAAzB,GAAgC,KAFtC;AAGHD,UAAAA,OAAO,EAAEc,MAAM,CAACE,OAAP,CAAehB,OAHrB;AAIHE,UAAAA,MAAM,EAAEY,MAAM,CAACE,OAAP,CAAef,OAAf,GAAyB,IAAzB,GAAgCa,MAAM,CAACE,OAAP,CAAed;AAJpD,SAAP;AAMH;;AACD,SAAKP,WAAL;AAAkB;AACd,eAAO,EACH,GAAGkB,KADA;AAEHd,UAAAA,OAAO,EAAEe,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD,SAAKpB,WAAL;AAAkB;AACd,eAAO,EACH,GAAGiB,KADA;AAEHZ,UAAAA,OAAO,EAAEa,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AAxDR;AA0DH","sourcesContent":["import {\r\n    GET_USER_BOOKINGS,\r\n    GET_ALL_BOOKINGS,\r\n    ADD_BOOKING,\r\n    SET_LOADING,\r\n    SET_SUCCESS\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    allBookings: [],\r\n    loading: false,\r\n    booking: null,\r\n    success: null,\r\n    errors: null,\r\n    pagination: {\r\n        current_page: null,\r\n        first_page_url: null,\r\n        from: null,\r\n        last_page: null,\r\n        last_page_url: null,\r\n        next_page_url: null,\r\n        path: null,\r\n        per_page: null,\r\n        prev_page_url: null\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USER_BOOKINGS: {\r\n            return {\r\n                ...state,\r\n                allBookings: action.payload.bookings.data,\r\n                pagination: {\r\n                    current_page: action.payload.bookings.current_page,\r\n                    first_page_url: action.payload.bookings.first_page_url,\r\n                    from: action.payload.bookings.from,\r\n                    last_page: action.payload.bookings.last_page,\r\n                    last_page_url: action.payload.bookings.last_page_url,\r\n                    next_page_url: action.payload.bookings.next_page_url,\r\n                    path: action.payload.bookings.path,\r\n                    per_page: action.payload.bookings.per_page,\r\n                    prev_page_url: action.payload.bookings.prev_page_url\r\n                }\r\n            };\r\n        }\r\n        case GET_ALL_BOOKINGS: {\r\n            return {\r\n                ...state,\r\n                allBookings: action.payload.bookings.data,\r\n                pagination: {\r\n                    current_page: action.payload.bookings.current_page,\r\n                    first_page_url: action.payload.bookings.first_page_url,\r\n                    from: action.payload.bookings.from,\r\n                    last_page: action.payload.bookings.last_page,\r\n                    last_page_url: action.payload.bookings.last_page_url,\r\n                    next_page_url: action.payload.bookings.next_page_url,\r\n                    path: action.payload.bookings.path,\r\n                    per_page: action.payload.bookings.per_page,\r\n                    prev_page_url: action.payload.bookings.prev_page_url\r\n                }\r\n            };\r\n        }\r\n        case ADD_BOOKING: {\r\n            return {\r\n                ...state,\r\n                success: action.payload.success ? true : false,\r\n                booking: action.payload.booking,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n        }\r\n        case SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}