{"ast":null,"code":"import { GET_USER_BOOKINGS, GET_ALL_BOOKINGS, ADD_BOOKING } from \"../actionTypes\";\nimport { setLoading } from \"./global\";\nimport axios from \"axios\";\nconst url = process.env.REACT_APP_BASE_URL; //-----------------------------------------\n\nexport const getAllBookings = (dispatch, token, page = 1) => {\n  setLoading(dispatch, true);\n  axios(`${url}/api/bookings?page=${page}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_ALL_BOOKINGS,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n}; //-----------------------------------------\n\nexport const getUserBookings = (dispatch, id, token, page = 1) => {\n  setLoading(dispatch, true);\n  axios(`${url}/api/bookings/user/${id}?page=${page}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_USER_BOOKINGS,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n}; //-----------------------------------------\n\nexport const addBooking = (dispatch, booking, token) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/api/bookings`, {\n    full_name: booking.full_name[0] + \" \" + booking.full_name[1],\n    number: booking.number,\n    exp_month: booking.exp_month,\n    exp_year: booking.exp_year,\n    cvc: booking.cvc,\n    check_in: booking.check_in,\n    check_out: booking.check_out,\n    user_id: booking.user_id,\n    room_id: booking.room_id,\n    amount: booking.amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: ADD_BOOKING,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n\n    if (error.response.status === 401) {\n      window.location.replace(\"/401\");\n    }\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/actions/bookings.js"],"names":["GET_USER_BOOKINGS","GET_ALL_BOOKINGS","ADD_BOOKING","setLoading","axios","url","process","env","REACT_APP_BASE_URL","getAllBookings","dispatch","token","page","headers","Authorization","then","response","type","payload","data","catch","error","status","window","location","replace","getUserBookings","id","addBooking","booking","post","full_name","number","exp_month","exp_year","cvc","check_in","check_out","user_id","room_id","amount"],"mappings":"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","sourcesContent":["import {\r\n    GET_USER_BOOKINGS,\r\n    GET_ALL_BOOKINGS,\r\n    ADD_BOOKING\r\n} from \"../actionTypes\";\r\nimport { setLoading } from \"./global\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst url = process.env.REACT_APP_BASE_URL;\r\n\r\n//-----------------------------------------\r\nexport const getAllBookings = (dispatch, token, page = 1) => {\r\n    setLoading(dispatch, true);\r\n    axios(`${url}/api/bookings?page=${page}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_ALL_BOOKINGS,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const getUserBookings = (dispatch, id, token, page = 1) => {\r\n    setLoading(dispatch, true);\r\n    axios(`${url}/api/bookings/user/${id}?page=${page}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n        .then((response) => {\r\n            dispatch({\r\n                type: GET_USER_BOOKINGS,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n//-----------------------------------------\r\nexport const addBooking = (dispatch, booking, token) => {\r\n    setLoading(dispatch, true);\r\n    axios\r\n        .post(\r\n            `${url}/api/bookings`,\r\n            {\r\n                full_name: booking.full_name[0] + \" \" + booking.full_name[1],\r\n                number: booking.number,\r\n                exp_month: booking.exp_month,\r\n                exp_year: booking.exp_year,\r\n                cvc: booking.cvc,\r\n                check_in: booking.check_in,\r\n                check_out: booking.check_out,\r\n                user_id: booking.user_id,\r\n                room_id: booking.room_id,\r\n                amount: booking.amount\r\n            },\r\n            {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            }\r\n        )\r\n        .then((response) => {\r\n            dispatch({\r\n                type: ADD_BOOKING,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(dispatch, false);\r\n            if (error.response.status === 401) {\r\n                window.location.replace(\"/401\");\r\n            }\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}