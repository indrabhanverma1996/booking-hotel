{"ast":null,"code":"import { SIGN_UP, LOG_IN, CHECK_AUTH } from \"../actionTypes\";\nimport { setLoading } from \"./global\";\nimport axios from \"axios\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_BASE_URL;\nexport const signUp = (dispatch, user, setToken, setUserId, setIsAdmin) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"post\",\n    url: `${url}/api/register`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      password: user.password,\n      is_admin: 0\n    }\n  }).then(response => {\n    setToken(response.data.data.success ? response.data.data.token : null);\n    setUserId(response.data.data.success ? response.data.data.user_id : null);\n    setIsAdmin(response.data.data.success ? response.data.data.is_admin : null);\n    dispatch({\n      type: SIGN_UP,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    window.location.replace(\"/\");\n  });\n}; //-----------------------------------------\n\nexport const logIn = (dispatch, user, setToken, setUserId, setIsAdmin) => {\n  console.log(user);\n  console.log(setToken);\n  console.log(setUserId);\n  console.log(setIsAdmin);\n  debbuger;\n  setLoading(dispatch, true);\n  axios({\n    method: \"post\",\n    url: `http://localhost:8000/api/login`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.data.success ? response.data.data.token : null);\n    setUserId(response.data.data.success ? response.data.data.user_id : null);\n    setIsAdmin(response.data.data.success ? response.data.data.is_admin : null);\n    localStorage.setItem(\"first_login\", true);\n    dispatch({\n      type: LOG_IN,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {//window.location.replace(\"/\");\n  });\n}; //-----------------------------------------\n\nexport const checkAuth = (dispatch, _token, userId, isAdmin) => {\n  let token = _token;\n  let user_id = userId;\n  let is_admin = isAdmin == \"1\" || isAdmin == 1 ? true : false; // eslint-disable-line\n\n  token != null && token != \"null\" && token != \"\" // eslint-disable-line\n  ? dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: true,\n      user_id,\n      token,\n      is_admin\n    }\n  }) : dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: false,\n      user_id: null,\n      token: null,\n      is_admin: null\n    }\n  });\n};","map":{"version":3,"sources":["C:/xampp/htdocs/hotel101-hotel-bookings-laravel-react/frontend/src/redux/actions/auth.js"],"names":["SIGN_UP","LOG_IN","CHECK_AUTH","setLoading","axios","url","process","env","REACT_APP_BASE_URL","signUp","dispatch","user","setToken","setUserId","setIsAdmin","method","headers","data","first_name","last_name","email","password","is_admin","then","response","success","token","user_id","type","payload","catch","error","window","location","replace","logIn","console","log","debbuger","localStorage","setItem","checkAuth","_token","userId","isAdmin","isAuthenticated"],"mappings":"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","sourcesContent":["import { SIGN_UP, LOG_IN, CHECK_AUTH } from \"../actionTypes\";\r\nimport { setLoading } from \"./global\";\r\nimport axios from \"axios\";\r\n\r\n//-----------------------------------------\r\nconst url = process.env.REACT_APP_BASE_URL;\r\n\r\n\r\nexport const signUp = (dispatch, user, setToken, setUserId, setIsAdmin) => {\r\n    setLoading(dispatch, true);\r\n    axios({\r\n        method: \"post\",\r\n        url: `${url}/api/register`,\r\n        headers: {\r\n            \"Content-Type\": \" application/json\"\r\n        },\r\n        data: {\r\n            first_name: user.first_name,\r\n            last_name: user.last_name,\r\n            email: user.email,\r\n            password: user.password,\r\n            is_admin: 0\r\n        }\r\n    })\r\n        .then((response) => {\r\n            setToken(\r\n                response.data.data.success ? response.data.data.token : null\r\n            );\r\n            setUserId(\r\n                response.data.data.success ? response.data.data.user_id : null\r\n            );\r\n            setIsAdmin(\r\n                response.data.data.success ? response.data.data.is_admin : null\r\n            );\r\n            dispatch({\r\n                type: SIGN_UP,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            window.location.replace(\"/\");\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const logIn = (dispatch, user, setToken, setUserId, setIsAdmin) => {\r\n    console.log(user)\r\n    console.log(setToken)\r\n    console.log(setUserId)\r\n    console.log(setIsAdmin)\r\n    \r\n     debbuger\r\n    setLoading(dispatch, true);\r\n    axios({\r\n        method: \"post\",\r\n        url: `http://localhost:8000/api/login`,\r\n        headers: {\r\n            \"Content-Type\": \" application/json\"\r\n        },\r\n        data: {\r\n            email: user.email,\r\n            password: user.password\r\n        }\r\n    })\r\n        .then((response) => {\r\n            setToken(\r\n                response.data.data.success ? response.data.data.token : null\r\n            );\r\n            setUserId(\r\n                response.data.data.success ? response.data.data.user_id : null\r\n            );\r\n            setIsAdmin(\r\n                response.data.data.success ? response.data.data.is_admin : null\r\n            );\r\n\r\n            localStorage.setItem(\"first_login\", true);\r\n\r\n            dispatch({\r\n                type: LOG_IN,\r\n                payload: response.data.data\r\n            });\r\n            setLoading(dispatch, false);\r\n        })\r\n        .catch((error) => {\r\n            //window.location.replace(\"/\");\r\n        });\r\n};\r\n//-----------------------------------------\r\n\r\nexport const checkAuth = (dispatch, _token, userId, isAdmin) => {\r\n    let token = _token;\r\n    let user_id = userId;\r\n    let is_admin = isAdmin == \"1\" || isAdmin == 1 ? true : false; // eslint-disable-line\r\n    token != null && token != \"null\" && token != \"\" // eslint-disable-line\r\n        ? dispatch({\r\n              type: CHECK_AUTH,\r\n              payload: {\r\n                  isAuthenticated: true,\r\n                  user_id,\r\n                  token,\r\n                  is_admin\r\n              }\r\n          })\r\n        : dispatch({\r\n              type: CHECK_AUTH,\r\n              payload: {\r\n                  isAuthenticated: false,\r\n                  user_id: null,\r\n                  token: null,\r\n                  is_admin: null\r\n              }\r\n          });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}