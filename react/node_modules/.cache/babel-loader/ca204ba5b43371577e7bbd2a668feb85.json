{"ast":null,"code":"import { GET_ROOM, GET_ALL_ROOMS, ADD_ROOM, UPDATE_ROOM, DELETE_ROOM, SET_SUCCESS, SET_LOADING } from \"../actionTypes\";\nconst initialState = {\n  room: {\n    id: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n    guest: 0,\n    hotel_id: 0,\n    image: \"\",\n    features: [],\n    created_at: \"\",\n    updated_at: \"\"\n  },\n  allRooms: [],\n  suggestedRooms: [],\n  success: null,\n  errors: null,\n  loading: false,\n  pagination: {\n    current_page: null,\n    first_page_url: null,\n    from: null,\n    last_page: null,\n    last_page_url: null,\n    next_page_url: null,\n    path: null,\n    per_page: null,\n    prev_page_url: null\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ROOM:\n      {\n        return { ...state,\n          room: action.payload.room,\n          suggestedRooms: action.payload.suggested_rooms\n        };\n      }\n\n    case ADD_ROOM:\n      {\n        return { ...state,\n          room: action.payload.room,\n          success: action.payload.success ? true : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case UPDATE_ROOM:\n      {\n        return { ...state,\n          room: action.payload.success ? action.payload.room : null,\n          success: action.payload.success ? true : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case DELETE_ROOM:\n      {\n        return { ...state,\n          room: action.payload.success ? action.payload.room : null,\n          success: action.payload.success ? true : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case GET_ALL_ROOMS:\n      {\n        return { ...state,\n          allRooms: action.payload.rooms.data,\n          pagination: {\n            current_page: action.payload.rooms.current_page,\n            first_page_url: action.payload.rooms.first_page_url,\n            from: action.payload.rooms.from,\n            last_page: action.payload.rooms.last_page,\n            last_page_url: action.payload.rooms.last_page_url,\n            next_page_url: action.payload.rooms.next_page_url,\n            path: action.payload.rooms.path,\n            per_page: action.payload.rooms.per_page,\n            prev_page_url: action.payload.rooms.prev_page_url\n          }\n        };\n      }\n\n    case SET_SUCCESS:\n      {\n        return { ...state,\n          success: action.payload\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/project/react/src/redux/reducers/rooms.js"],"names":["GET_ROOM","GET_ALL_ROOMS","ADD_ROOM","UPDATE_ROOM","DELETE_ROOM","SET_SUCCESS","SET_LOADING","initialState","room","id","name","description","price","guest","hotel_id","image","features","created_at","updated_at","allRooms","suggestedRooms","success","errors","loading","pagination","current_page","first_page_url","from","last_page","last_page_url","next_page_url","path","per_page","prev_page_url","state","action","type","payload","suggested_rooms","rooms","data"],"mappings":"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","sourcesContent":["import {\r\n    GET_ROOM,\r\n    GET_ALL_ROOMS,\r\n    ADD_ROOM,\r\n    UPDATE_ROOM,\r\n    DELETE_ROOM,\r\n    SET_SUCCESS,\r\n    SET_LOADING\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    room: {\r\n        id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        price: 0,\r\n        guest: 0,\r\n        hotel_id: 0,\r\n        image: \"\",\r\n        features: [],\r\n        created_at: \"\",\r\n        updated_at: \"\"\r\n    },\r\n    allRooms: [],\r\n    suggestedRooms: [],\r\n    success: null,\r\n    errors: null,\r\n    loading: false,\r\n    pagination: {\r\n        current_page: null,\r\n        first_page_url: null,\r\n        from: null,\r\n        last_page: null,\r\n        last_page_url: null,\r\n        next_page_url: null,\r\n        path: null,\r\n        per_page: null,\r\n        prev_page_url: null\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ROOM: {\r\n            return {\r\n                ...state,\r\n                room: action.payload.room,\r\n                suggestedRooms: action.payload.suggested_rooms\r\n            };\r\n        }\r\n        case ADD_ROOM: {\r\n            return {\r\n                ...state,\r\n                room: action.payload.room,\r\n                success: action.payload.success ? true : false,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case UPDATE_ROOM: {\r\n            return {\r\n                ...state,\r\n                room: action.payload.success ? action.payload.room : null,\r\n                success: action.payload.success ? true : false,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case DELETE_ROOM: {\r\n            return {\r\n                ...state,\r\n                room: action.payload.success ? action.payload.room : null,\r\n                success: action.payload.success ? true : false,\r\n                errors: action.payload.success ? null : action.payload.errors\r\n            };\r\n        }\r\n        case GET_ALL_ROOMS: {\r\n            return {\r\n                ...state,\r\n                allRooms: action.payload.rooms.data,\r\n                pagination: {\r\n                    current_page: action.payload.rooms.current_page,\r\n                    first_page_url: action.payload.rooms.first_page_url,\r\n                    from: action.payload.rooms.from,\r\n                    last_page: action.payload.rooms.last_page,\r\n                    last_page_url: action.payload.rooms.last_page_url,\r\n                    next_page_url: action.payload.rooms.next_page_url,\r\n                    path: action.payload.rooms.path,\r\n                    per_page: action.payload.rooms.per_page,\r\n                    prev_page_url: action.payload.rooms.prev_page_url\r\n                }\r\n            };\r\n        }\r\n        case SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            };\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}